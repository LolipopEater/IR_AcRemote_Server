
#include <IRLibSendBase.h>    //We need the base code
#include <IRLib_HashRaw.h>    //Only use raw sender
#include <IRLibRecvPCI.h>
#include <SoftwareSerial.h>
IRrecvPCI myReceiver(2);//pin number for the receiver
IRsendRaw mySender;
SoftwareSerial mySerial(11, 12);
void setup() {
  Serial.begin(115200);
  while (!Serial);
  myReceiver.enableIRIn(); // Start the receiver
  myReceiver.setFrameTimeout(100000);
  pinMode(11, INPUT);
  pinMode(12, OUTPUT);
  mySerial.begin(115200);
  delay(2000); 
  while (!Serial);
}

#define RAW_DATA_LEN 344
int counterTemp = 0;
 const uint16_t rawDataOff[RAW_DATA_LEN] PROGMEM ={
  8978, 4518, 562, 1706, 558, 1706, 562, 598, 
  546, 598, 546, 586, 554, 602, 546, 598, 
  546, 1710, 558, 602, 546, 1666, 594, 1706, 
  562, 586, 558, 590, 554, 602, 542, 602, 
  542, 590, 558, 1706, 562, 1706, 554, 1710, 
  562, 586, 558, 586, 554, 602, 546, 598, 
  542, 606, 546, 602, 542, 1706, 558, 602, 
  546, 598, 542, 602, 542, 602, 542, 602, 
  538, 594, 558, 590, 554, 602, 546, 598, 
  542, 586, 558, 590, 554, 602, 542, 598, 
  546, 590, 558, 586, 558, 602, 542, 602, 
  542, 586, 558, 602, 542, 598, 546, 602, 
  542, 582, 562, 7966, 562, 598, 546, 586, 
  558, 598, 546, 1702, 562, 602, 542, 602, 
  542, 602, 542, 1710, 562, 598, 546, 598, 
  546, 1702, 562, 1706, 562, 598, 546, 598, 
  542, 602, 542, 610, 538, 602, 546, 598, 
  542, 602, 538, 594, 554, 586, 558, 602, 
  546, 598, 546, 590, 558, 598, 546, 598, 
  542, 602, 546, 598, 546, 598, 542, 586, 
  562, 598, 542, 606, 546, 582, 558, 590, 
  554, 602, 542, 602, 542, 602, 542, 586, 
  558, 602, 542, 606, 542, 602, 542, 602, 
  542, 586, 558, 602, 542, 602, 542, 586, 
  558, 586, 558, 606, 542, 586, 558, 598, 
  546, 586, 558, 598, 546, 586, 558, 598, 
  546, 598, 546, 590, 558, 1706, 558, 602, 
  542, 602, 542, 602, 542, 586, 558, 602, 
  542, 586, 558, 1706, 562, 7966, 562, 586, 
  558, 598, 546, 586, 554, 602, 546, 586, 
  554, 590, 554, 602, 542, 606, 542, 1710, 
  558, 602, 542, 586, 558, 586, 558, 598, 
  542, 590, 558, 598, 542, 594, 558, 598, 
  546, 598, 546, 598, 546, 598, 542, 602, 
  546, 586, 558, 586, 554, 598, 554, 586, 
  554, 602, 546, 598, 542, 602, 542, 602, 
  542, 590, 554, 590, 558, 602, 542, 590, 
  554, 590, 554, 590, 554, 602, 546, 598, 
  542, 590, 554, 586, 558, 594, 558, 598, 
  546, 586, 554, 590, 554, 590, 554, 590, 
  554, 602, 542, 586, 558, 594, 558, 1702, 
  562, 586, 558, 586, 558, 586, 558, 586, 
  558, 586, 558, 586, 558, 586, 554, 1000};


const uint16_t rawDataTemp[6][RAW_DATA_LEN] PROGMEM={{
  8954, 4510, 602, 1666, 598, 1666, 598, 566, 
  550, 594, 582, 562, 578, 562, 554, 590, 
  582, 1686, 586, 562, 554, 1698, 566, 1698, 
  598, 562, 578, 566, 550, 594, 582, 562, 
  578, 570, 554, 1698, 594, 1682, 554, 594, 
  554, 590, 582, 566, 574, 566, 554, 590, 
  582, 570, 550, 590, 554, 1698, 594, 566, 
  578, 566, 550, 594, 578, 566, 546, 594, 
  554, 598, 578, 566, 550, 594, 578, 566, 
  578, 566, 550, 594, 550, 594, 574, 566, 
  554, 598, 578, 566, 550, 594, 550, 594, 
  578, 566, 574, 566, 554, 594, 578, 566, 
  546, 594, 554, 7958, 594, 1674, 594, 566, 
  582, 562, 578, 1670, 570, 594, 578, 566, 
  578, 562, 578, 1678, 570, 1698, 598, 1666, 
  594, 570, 550, 590, 582, 1670, 594, 1670, 
  594, 566, 550, 602, 582, 562, 546, 594, 
  554, 590, 554, 594, 578, 562, 550, 594, 
  554, 578, 594, 570, 546, 598, 550, 594, 
  574, 566, 550, 594, 554, 590, 578, 566, 
  550, 594, 550, 598, 550, 598, 546, 594, 
  554, 578, 562, 594, 546, 598, 554, 590, 
  550, 594, 550, 602, 546, 598, 542, 602, 
  546, 594, 550, 594, 546, 598, 550, 598, 
  542, 598, 546, 606, 546, 594, 546, 602, 
  542, 602, 546, 598, 542, 598, 546, 598, 
  550, 598, 542, 606, 542, 1706, 562, 1702, 
  562, 602, 542, 1706, 566, 1698, 566, 1702, 
  558, 602, 546, 1702, 566, 7966, 558, 602, 
  542, 602, 546, 598, 518, 626, 546, 598, 
  546, 598, 514, 626, 546, 606, 542, 602, 
  518, 1730, 562, 602, 542, 602, 538, 602, 
  546, 598, 546, 598, 518, 634, 542, 602, 
  538, 602, 518, 626, 546, 598, 546, 598, 
  518, 626, 546, 598, 542, 606, 518, 626, 
  546, 598, 518, 626, 518, 626, 546, 598, 
  518, 626, 542, 602, 546, 602, 518, 626, 
  546, 598, 546, 598, 518, 626, 546, 598, 
  546, 598, 518, 626, 546, 602, 518, 626, 
  518, 626, 546, 598, 542, 602, 542, 602, 
  546, 598, 542, 602, 518, 630, 546, 598, 
  518, 1730, 562, 602, 542, 602, 514, 630, 
  546, 598, 542, 598, 518, 626, 546, 1000},{
 8910, 4554, 526, 1738, 526, 1742, 526, 618, 
  526, 618, 526, 618, 526, 618, 526, 618, 
  526, 1742, 530, 618, 526, 1738, 526, 1738, 
  530, 618, 522, 622, 522, 622, 526, 618, 
  526, 622, 526, 1738, 526, 1738, 530, 618, 
  526, 618, 522, 622, 522, 622, 526, 618, 
  522, 626, 526, 618, 526, 1738, 526, 622, 
  522, 622, 522, 1738, 526, 622, 526, 618, 
  526, 626, 522, 618, 526, 618, 526, 622, 
  522, 618, 526, 618, 526, 618, 526, 618, 
  522, 626, 526, 622, 522, 618, 526, 618, 
  522, 622, 522, 650, 498, 622, 518, 650, 
  494, 622, 526, 7998, 530, 1738, 526, 622, 
  522, 622, 522, 1738, 526, 622, 526, 618, 
  522, 622, 522, 1746, 526, 622, 522, 650, 
  494, 1742, 526, 618, 526, 1738, 526, 1738, 
  530, 622, 522, 626, 522, 618, 526, 622, 
  522, 622, 522, 622, 522, 618, 526, 618, 
  526, 618, 526, 626, 522, 622, 522, 622, 
  522, 622, 522, 622, 522, 622, 522, 618, 
  526, 618, 526, 626, 522, 622, 522, 622, 
  522, 650, 494, 622, 522, 618, 526, 618, 
  526, 622, 522, 626, 522, 622, 522, 622, 
  522, 622, 522, 622, 522, 618, 526, 622, 
  522, 622, 522, 626, 522, 622, 522, 622, 
  554, 586, 558, 586, 526, 618, 526, 618, 
  558, 586, 526, 626, 522, 622, 522, 618, 
  558, 1706, 530, 1738, 526, 618, 526, 1738, 
  558, 590, 554, 1706, 566, 7966, 558, 590, 
  554, 590, 554, 590, 554, 586, 558, 590, 
  554, 586, 558, 586, 558, 594, 554, 590, 
  554, 1706, 562, 586, 558, 586, 558, 586, 
  558, 586, 558, 586, 558, 590, 558, 586, 
  558, 586, 558, 586, 558, 586, 558, 586, 
  558, 586, 558, 586, 558, 590, 558, 586, 
  558, 586, 558, 586, 558, 586, 558, 586, 
  558, 586, 558, 586, 558, 590, 558, 586, 
  558, 586, 558, 586, 558, 586, 558, 586, 
  558, 586, 558, 586, 558, 590, 558, 586, 
  558, 586, 558, 586, 558, 586, 558, 586, 
  558, 586, 558, 586, 558, 590, 562, 582, 
  562, 1702, 562, 586, 558, 586, 558, 586, 
  558, 582, 562, 586, 558, 582, 554, 1000},{
 8982, 4482, 602, 1666, 570, 1698, 566, 594, 
  582, 562, 578, 566, 578, 566, 550, 590, 
  554, 1702, 570, 594, 550, 1710, 586, 1666, 
  570, 590, 554, 590, 582, 562, 578, 566, 
  550, 598, 554, 1710, 554, 1698, 570, 594, 
  578, 566, 578, 562, 578, 566, 550, 594, 
  550, 602, 550, 594, 578, 1670, 594, 566, 
  578, 562, 554, 1698, 598, 562, 554, 594, 
  550, 598, 582, 562, 578, 566, 546, 594, 
  582, 562, 582, 566, 578, 562, 578, 566, 
  578, 574, 582, 562, 582, 562, 578, 550, 
  590, 570, 574, 570, 550, 594, 578, 566, 
  574, 566, 546, 7966, 598, 1670, 594, 566, 
  578, 554, 558, 1702, 594, 570, 542, 602, 
  546, 582, 562, 1706, 598, 1666, 598, 566, 
  578, 1670, 598, 566, 574, 1670, 598, 1670, 
  594, 570, 574, 574, 546, 598, 546, 598, 
  578, 566, 578, 566, 546, 598, 542, 598, 
  546, 586, 562, 602, 578, 566, 546, 594, 
  546, 598, 546, 598, 550, 594, 578, 566, 
  550, 594, 546, 606, 542, 598, 550, 582, 
  562, 594, 546, 602, 542, 598, 546, 598, 
  546, 598, 550, 602, 546, 594, 546, 602, 
  538, 602, 546, 598, 550, 594, 550, 594, 
  546, 598, 542, 606, 550, 594, 550, 594, 
  550, 594, 542, 602, 542, 602, 546, 598, 
  550, 594, 546, 602, 542, 1706, 566, 598, 
  542, 1706, 558, 1706, 566, 598, 542, 1706, 
  562, 598, 550, 1698, 566, 7962, 562, 602, 
  542, 602, 546, 598, 546, 598, 542, 602, 
  542, 598, 550, 594, 546, 606, 550, 594, 
  546, 1702, 566, 594, 546, 586, 558, 598, 
  550, 594, 550, 594, 546, 602, 546, 598, 
  546, 598, 550, 594, 550, 594, 550, 594, 
  546, 598, 546, 586, 558, 602, 550, 594, 
  550, 594, 546, 598, 546, 586, 558, 598, 
  550, 594, 546, 598, 546, 602, 546, 598, 
  546, 598, 546, 598, 546, 598, 546, 598, 
  542, 602, 542, 602, 546, 602, 546, 598, 
  542, 602, 542, 602, 542, 602, 542, 602, 
  542, 602, 542, 602, 538, 610, 542, 602, 
  542, 1710, 554, 606, 538, 606, 538, 602, 
  542, 606, 534, 610, 510, 630, 510, 1000},{
 8954, 4510, 570, 1698, 570, 1698, 566, 594, 
  550, 594, 578, 566, 578, 566, 574, 570, 
  550, 1702, 570, 594, 550, 1698, 566, 1698, 
  594, 574, 542, 598, 546, 594, 550, 594, 
  550, 602, 542, 1706, 590, 1674, 562, 602, 
  542, 598, 542, 606, 542, 602, 542, 602, 
  542, 606, 542, 602, 542, 1706, 558, 602, 
  538, 606, 542, 602, 542, 1706, 562, 602, 
  542, 606, 542, 602, 538, 606, 542, 602, 
  538, 606, 538, 606, 542, 602, 542, 602, 
  538, 610, 538, 606, 542, 602, 542, 602, 
  542, 602, 542, 602, 538, 606, 538, 606, 
  538, 602, 546, 7966, 562, 1706, 562, 602, 
  538, 602, 542, 1706, 562, 602, 538, 606, 
  538, 606, 538, 1714, 558, 1710, 554, 606, 
  542, 1706, 558, 606, 542, 1706, 558, 1706, 
  558, 602, 546, 606, 542, 602, 542, 602, 
  546, 598, 542, 602, 542, 598, 546, 602, 
  546, 594, 550, 602, 546, 598, 542, 602, 
  542, 598, 546, 598, 550, 598, 574, 570, 
  574, 566, 550, 598, 550, 594, 550, 598, 
  574, 570, 574, 566, 578, 566, 578, 566, 
  546, 598, 550, 602, 550, 594, 578, 562, 
  578, 570, 546, 594, 550, 594, 550, 594, 
  550, 594, 578, 574, 574, 566, 550, 594, 
  550, 594, 550, 594, 578, 566, 550, 594, 
  546, 598, 546, 602, 550, 1702, 566, 594, 
  550, 1710, 554, 1702, 566, 1698, 566, 594, 
  550, 594, 550, 1698, 570, 7962, 594, 566, 
  550, 594, 546, 598, 546, 598, 550, 594, 
  550, 594, 550, 594, 574, 574, 550, 594, 
  546, 1702, 566, 594, 550, 594, 550, 594, 
  578, 566, 578, 566, 546, 606, 546, 594, 
  550, 598, 546, 598, 546, 594, 550, 594, 
  550, 594, 550, 594, 550, 602, 546, 594, 
  550, 594, 550, 594, 550, 594, 550, 594, 
  550, 594, 550, 594, 550, 602, 546, 594, 
  550, 594, 550, 594, 550, 598, 546, 594, 
  550, 594, 546, 598, 546, 602, 550, 594, 
  550, 582, 562, 582, 562, 594, 546, 598, 
  546, 598, 546, 598, 550, 586, 562, 598, 
  546, 1702, 566, 594, 546, 598, 546, 598, 
  546, 594, 550, 598, 546, 594, 546, 1000},{
 8954, 4514, 594, 1670, 566, 1702, 594, 566, 
  574, 570, 578, 566, 574, 570, 546, 598, 
  546, 1706, 566, 598, 546, 1702, 562, 1702, 
  590, 574, 546, 598, 546, 598, 546, 598, 
  574, 574, 542, 1706, 562, 1706, 562, 598, 
  546, 598, 546, 598, 546, 598, 546, 594, 
  578, 574, 546, 598, 546, 1702, 562, 602, 
  542, 598, 550, 1702, 562, 1702, 562, 598, 
  546, 606, 546, 598, 546, 594, 578, 554, 
  558, 602, 542, 602, 542, 598, 546, 602, 
  546, 586, 590, 570, 542, 602, 542, 602, 
  542, 598, 546, 598, 546, 598, 550, 594, 
  546, 598, 546, 7966, 562, 1706, 558, 602, 
  542, 602, 542, 1706, 562, 602, 538, 602, 
  546, 602, 542, 1710, 562, 598, 546, 1702, 
  566, 1702, 562, 598, 546, 1702, 566, 1702, 
  562, 602, 542, 602, 546, 598, 546, 598, 
  546, 598, 542, 602, 546, 598, 546, 602, 
  542, 598, 542, 606, 542, 606, 538, 606, 
  538, 602, 546, 598, 546, 598, 542, 602, 
  542, 602, 542, 610, 542, 598, 546, 598, 
  546, 598, 542, 602, 542, 602, 542, 602, 
  546, 602, 542, 602, 546, 598, 542, 602, 
  542, 602, 542, 602, 542, 590, 554, 602, 
  538, 606, 542, 610, 542, 598, 546, 598, 
  546, 602, 538, 602, 542, 602, 542, 602, 
  542, 602, 542, 606, 546, 598, 542, 1710, 
  558, 1706, 562, 1706, 558, 602, 542, 602, 
  542, 602, 542, 1702, 562, 7970, 558, 602, 
  542, 602, 546, 602, 542, 598, 546, 598, 
  542, 602, 542, 602, 542, 606, 546, 598, 
  546, 1706, 558, 602, 542, 602, 542, 602, 
  542, 602, 538, 606, 538, 610, 542, 602, 
  542, 602, 542, 602, 542, 602, 538, 606, 
  538, 602, 542, 602, 546, 606, 542, 602, 
  542, 602, 538, 606, 542, 602, 538, 606, 
  542, 602, 542, 602, 538, 610, 538, 606, 
  538, 606, 538, 606, 542, 602, 538, 606, 
  538, 606, 538, 602, 542, 610, 542, 602, 
  542, 602, 542, 602, 538, 606, 538, 602, 
  542, 602, 542, 602, 542, 610, 542, 602, 
  538, 1710, 558, 602, 542, 602, 538, 606, 
  538, 606, 542, 586, 558, 602, 534, 1000},{
 8950, 4514, 562, 1706, 590, 1674, 566, 582, 
  586, 574, 574, 554, 562, 578, 562, 582, 
  566, 1706, 566, 594, 546, 1702, 566, 1702, 
  590, 554, 562, 582, 562, 582, 562, 582, 
  562, 590, 586, 1678, 590, 1674, 562, 598, 
  546, 582, 590, 574, 570, 570, 574, 570, 
  546, 590, 562, 582, 558, 1702, 566, 582, 
  562, 582, 586, 558, 590, 1674, 590, 558, 
  586, 562, 590, 554, 562, 582, 586, 558, 
  562, 582, 558, 586, 586, 558, 586, 558, 
  586, 578, 546, 582, 562, 582, 558, 602, 
  542, 602, 570, 558, 586, 558, 586, 558, 
  586, 554, 594, 7934, 590, 1678, 590, 554, 
  562, 582, 562, 1702, 590, 558, 558, 598, 
  546, 598, 546, 1706, 566, 582, 590, 1674, 
  562, 1706, 562, 582, 562, 1702, 566, 1698, 
  566, 598, 546, 590, 586, 554, 590, 558, 
  586, 558, 586, 558, 558, 598, 546, 582, 
  562, 582, 590, 562, 586, 558, 586, 558, 
  586, 554, 590, 570, 546, 582, 562, 582, 
  590, 570, 574, 562, 586, 558, 586, 554, 
  590, 574, 570, 558, 586, 558, 586, 570, 
  574, 554, 586, 562, 590, 558, 558, 586, 
  586, 574, 570, 554, 590, 570, 570, 558, 
  586, 558, 586, 578, 574, 554, 562, 582, 
  590, 554, 586, 558, 586, 558, 586, 558, 
  590, 554, 590, 558, 562, 586, 586, 1674, 
  590, 1678, 590, 1674, 590, 1678, 586, 558, 
  590, 574, 570, 1674, 562, 7970, 586, 574, 
  570, 574, 570, 558, 562, 598, 570, 558, 
  558, 586, 558, 602, 542, 606, 570, 574, 
  546, 1702, 586, 562, 586, 574, 570, 558, 
  582, 562, 554, 586, 558, 594, 558, 586, 
  558, 586, 582, 562, 558, 582, 558, 602, 
  542, 602, 542, 586, 558, 594, 558, 586, 
  554, 590, 554, 590, 554, 602, 542, 586, 
  558, 602, 542, 586, 558, 594, 554, 606, 
  538, 606, 538, 590, 550, 594, 554, 590, 
  554, 590, 554, 602, 542, 594, 554, 590, 
  550, 594, 550, 590, 554, 590, 554, 590, 
  558, 586, 558, 602, 542, 594, 554, 590, 
  550, 1710, 554, 594, 554, 606, 538, 590, 
  554, 590, 554, 606, 538, 586, 582, 1000}};
uint16_t temp[RAW_DATA_LEN];


void get(char x)
{  
  unsigned int displayInt;
  switch(x){
    case 'o':
  for (int k = 0; k < RAW_DATA_LEN; k++) {
      displayInt = pgm_read_word_near(rawDataOff + k);
      temp[k] = displayInt;
   }
    mySender.send(temp,RAW_DATA_LEN,38);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On"));
      delay(3000);
      break; 
      case 'd':
      if(counterTemp==0)
      {
        break;
        }
        counterTemp--;
      for (int k = 0; k < RAW_DATA_LEN; k++) {
      displayInt = pgm_read_word_near(rawDataTemp[counterTemp] + k);
      temp[k] = displayInt;
       }
      mySender.send(temp,RAW_DATA_LEN,38);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC temp down to "));
      Serial.println(counterTemp);
      delay(3000);
      break; 
       case 'u':
       if(counterTemp==6)
      {
        break;
        }
        counterTemp++;
       for (int k = 0; k < RAW_DATA_LEN; k++) {
      displayInt = pgm_read_word_near(rawDataTemp[counterTemp] + k);
      temp[k] = displayInt;
       }
      mySender.send(temp,RAW_DATA_LEN,38);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC temp up to "));
      Serial.println(counterTemp);
      delay(3000);
      break; 
    }   
    }

  
void loop() {
  if (mySerial.available() > 0) {
        get(mySerial.read());      
  }
    if (myReceiver.getResults()) { 
    Serial.println(F("Do a cut-and-paste of the following lines into the "));
    Serial.println(F("designated location in rawSend.ino"));
    Serial.print(F("\n#define RAW_DATA_LEN "));
    Serial.println(recvGlobal.recvLength,DEC);
    Serial.print(F("uint16_t rawData[RAW_DATA_LEN]={\n\t"));
    for(bufIndex_t i=1;i<recvGlobal.recvLength;i++) {
      Serial.print(recvGlobal.recvBuffer[i],DEC);
      Serial.print(F(", "));
      if( (i % 8)==0) Serial.print(F("\n\t"));
    }
    Serial.println(F("1000};"));
    myReceiver.enableIRIn();
    
  }
  delay(100);

}
